partial alphanumeric_keys
xkb_symbols "noppoo" {
    key <TLDE> {
        type= "FOUR_LEVEL",
        symbols[Group1]= [            less,         greater,        NoSymbol,        NoSymbol ]
    };
    key <SCLK> {         [          Insert ] };
    key <DELE> {         [             End ] };
    key <PAUS> {
        type= "PC_CONTROL_LEVEL2",
        symbols[Group1]= [            Home,        NoSymbol ]
    };

    key <AE01>	{ [ ampersand,          1,  onesuperior, XF86_Switch_VT_1 ]	};
    key <AE02>	{ [    eacute,          2,   asciitilde, XF86_Switch_VT_2 ]	};
    key <AE03>	{ [  quotedbl,          3,   numbersign, XF86_Switch_VT_3 ]	};
    key <AE04>	{ [apostrophe,          4,    braceleft, XF86_Switch_VT_4 ]	};
    key <AE05>	{ [ parenleft,          5,  bracketleft, XF86_Switch_VT_5 ]	};
    key <AE06>	{ [     minus,          6,          bar, XF86_Switch_VT_6 ]	};
    key <AE07>	{ [    egrave,          7,        grave, XF86_Switch_VT_7 ]	};
    key <AE08>	{ [underscore,          8,    backslash, XF86_Switch_VT_8 ]	};
    key <AE09>	{ [  ccedilla,          9,  asciicircum, XF86_Switch_VT_9 ]	};
    key <AE10>	{ [    agrave,          0,           at, XF86_Switch_VT_10 ]	};

    key <AD01>	{ [         a,          A,           ae,           Terminate_Server ]	};
    key <AD02>	{ [         z,          Z, guillemotleft,        XF86_Switch_VT_1 ]	};
    key <AD03>	{ [         e,          E,     EuroSign,         XF86_Switch_VT_2 ]	};
    key <AD04>	{ [         r,          R,    paragraph,   XF86_Switch_VT_3 ]	};
};

xkb_symbols "pedal" {
    //key <PED0>	{ [         1,     exclam,  onesuperior,   exclamdown ]	};
    //key <PED1>	{ [         2,         at,  twosuperior,    oneeighth ]	};
    //key <PED2>	{ [         3, Terminate_Server, threesuperior,    sterling ]	};
    key <PED0>	{ [U2044,     exclam,  onesuperior,   exclamdown ]	};
    key <PED1>	{ [U2045,         at,  twosuperior,    oneeighth ]	};
    key <PED2>	{ [U2046, Terminate_Server, threesuperior,    sterling ]	};
};

xkb_symbols "mirror" {
    //include "pc+fr+inet(evdev)+ctrl(nocaps)+terminate(ctrl_alt_bksp)"
    //include "pc+fr(latin9)+inet(evdev)"

    // First row
    //key <TLDE>	{ [      twosuperior,    threesuperior,          onesuperior,          dead_cedilla ] }; // ² ³ ¹ ¸
    key <TLDE>	{ [      grave,    threesuperior,          onesuperior,          dead_cedilla ] }; // ² ³ ¹ ¸
    //key <AE01>	{ [        ampersand,                1,           dead_caron,           dead_ogonek ] }; // & 1 ˇ ̨
    //key <AE02>	{ [           eacute,                2,           asciitilde,                Eacute ] }; // é 2 ~ É
    //key <AE03>	{ [         quotedbl,                3,           numbersign,            dead_breve ] }; // " 3 # ˘
    //key <AE04>	{ [       apostrophe,                4,            braceleft,             0x1002014 ] }; // ' 4 { — (tiret cadratin)
    //key <AE05>	{ [        parenleft,                5,          bracketleft,             0x1002013 ] }; // ( 5 [ – (tiret demi-cadratin)
    //key <AE06>	{ [            minus,                6,                  bar,             0x1002011 ] }; // - 6 | ‑ (tiret insécable)
    //key <AE07>	{ [           egrave,                7,                grave,                Egrave ] }; // è 7 ` È
    //key <AE08>	{ [       underscore,                8,            backslash,             trademark ] }; // _ 8 \ ™
    //key <AE09>	{ [         ccedilla,                9,          asciicircum,              Ccedilla ] }; // ç 9 ^ Ç
    //key <AE10>	{ [           agrave,                0,                   at,                Agrave ] }; // à 0 @ À
    //key <AE11>	{ [       parenright,           degree,         bracketright,              notequal ] }; // ) ° ] ≠
    //key <AE12>	{ [            equal,             plus,           braceright,             plusminus ] }; // = + } ±

    // Second row
    //key <AD01>	{ [                a,                A,                   ae,                    AE ] }; // a A æ Æ
    //key <AD02>	{ [                z,                Z,          acircumflex,           Acircumflex ] }; // z Z â Â
    //key <AD03>	{ [                e,                E,             EuroSign,                  cent ] }; // e E € ¢
    //key <AD04>	{ [                r,                R,          ecircumflex,           Ecircumflex ] }; // r R ê Ê
    //key <AD05>	{ [                t,                T,                thorn,                 THORN ] }; // t T þ Þ
    key <AD06>	{ [                y,                Y,                    t,                     T ] }; // y Y ÿ Ÿ
    key <AD07>	{ [                u,                U,                    r,                     R ] }; // u U û Û
    key <AD08>	{ [                i,                I,                    e,                     E ] }; // i I î Î
    key <AD09>	{ [                o,                O,                    z,                     Z ] }; // o O œ Œ
    key <AD10>	{ [                p,                P,                    a,                     A ] }; // p P ô Ô
    key <AD11>	{ [  dead_circumflex,   dead_diaeresis,           dead_tilde,        dead_abovering ] }; // ^ ̈ ̃ ˚
    key <AD12>	{ [           dollar,         sterling,               oslash,              Ooblique ] }; // $ £ ø Ø

    // Third row
    //key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä
    //key <AC02>	{ [                s,                S,               ssharp,    doublelowquotemark ] }; // s S ß „
    //key <AC03>	{ [                d,                D,           ediaeresis,            Ediaeresis ] }; // d D ë Ë
    //key <AC04>	{ [                f,                F,  leftsinglequotemark,    singlelowquotemark ] }; // f F ‘ ‚
    //key <AC05>	{ [                g,                G, rightsinglequotemark,                   yen ] }; // g G ’ ¥
    key <AC06>	{ [                h,                H,                    g,                     G ] }; // h H ð Ð
    key <AC07>	{ [                j,                J,                    f,                     F ] }; // j J ü Ü
    key <AC08>	{ [                k,                K,                    d,                     D ] }; // k K ï Ï
    key <AC09>	{ [                l,                L,                    s,                     S ] }; // l L ŀ Ŀ
    key <AC10>	{ [                m,                M,                    q,                     Q ] }; // m M ö Ö
    //key <AC11>	{ [       apostrophe,          percent,             quotedbl,                Ugrave ] }; // ù % ' Ù
    key <BKSL>	{ [         asterisk,               mu,           dead_grave,           dead_macron ] }; // * µ ` ̄

    // Fourth row
    //key <LSGT>  { [             less,          greater,        lessthanequal,      greaterthanequal ] }; // < > ≤ ≥
    //key <AB01>  { [                w,                W,        guillemotleft,   leftdoublequotemark ] }; // w W « “
    //key <AB02>  { [                x,                X,       guillemotright,  rightdoublequotemark ] }; // x X » ”
    key <AB03>  { [                c,                C,            copyright,            Ccedilla ] }; // c C © ®
    //key <AB04>  { [                v,                V,            0x100202F,             leftarrow ] }; // v V ⍽ ←
    key <AB05>  { [                b,                B,                    b,                     B ] }; // b B ↓ ↑
    key <AB06>  { [                n,                N,                    v,                     V  ] }; // n N ¬ →
    key <AB07>  { [            comma,         question,                    c,                     C ] }; // , ? ¿ …
    key <AB08>  { [        semicolon,           period,                    x,                     X ] }; // ; . × ⋅
    key <AB09>  { [            colon,            slash,                    w,                     W ] }; // : / ÷ ∕
    key <AB10>  { [           exclam,          section,                    none,               none ] }; // ! § ¡ −

    //include "ctrl(nocaps)" key <SPCE> {	[ 	 space, space, space, space		]	};

    //key <PRSC> { [ none, none, none, none ] };
    //key <TLDE> { symbols[Group1]= [ Alt_R ] };
    //key <TLDE> {
    //    type= "ONE_LEVEL",
    //    symbols[Group1]= [ ISO_Level3_Shift ]
    //};
};
